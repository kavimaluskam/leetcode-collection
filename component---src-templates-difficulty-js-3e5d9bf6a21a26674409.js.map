{"version":3,"sources":["webpack:///./src/templates/difficulty.js"],"names":["Headline","styled","div","Difficulties","pageContext","data","difficulty","title","site","siteMetadata","to","listing","prefix","pageQuery"],"mappings":"6FAAA,sIASMA,EAAWC,IAAOC,IAAV,0EAAGD,CAAH,gPAuCCE,UAjBM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC3BC,EAAeF,EAAfE,WACR,OACE,oCACE,kBAAC,IAAD,CAAQC,MAAUD,EAAL,MAAqBD,EAAKG,KAAKC,aAAaF,QACzD,kBAACP,EAAD,KACE,4BACE,kBAAC,IAAD,CAAMU,GAAG,SAAT,YADF,OAGA,4BAAKJ,IAEP,kBAAC,IAAD,CAASK,QAASN,EAAKM,UACvB,kBAAC,IAAD,eAAYC,OAAM,eAAiBN,EAAjB,KAAoCF,MAMrD,IAAMS,EAAS","file":"component---src-templates-difficulty-js-3e5d9bf6a21a26674409.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Helmet from \"react-helmet\"\n\nimport Listing from \"../components/QuestionListing\"\nimport Pagination from \"../components/Pagination\"\n\nconst Headline = styled.div`\n  margin-block-start: 1.5em;\n  margin-block-end: 1.5em;\n  a {\n    color: var(--color-text);\n    text-decoration: none;\n  }\n  a:hover {\n    color: var(--color-primary);\n  }\n  h1 {\n    display: inline;\n  }\n  h2 {\n    color: var(--color-lightGrey);\n    display: inline;\n  }\n  h2 a {\n    color: var(--color-lightGrey);\n  }\n`\n\nconst Difficulties = ({ pageContext, data }) => {\n  const { difficulty } = pageContext\n  return (\n    <>\n      <Helmet title={`${difficulty} | ${data.site.siteMetadata.title}`} />\n      <Headline>\n        <h2>\n          <Link to=\"/tags\">All tags</Link> /&nbsp;\n        </h2>\n        <h1>{difficulty}</h1>\n      </Headline>\n      <Listing listing={data.listing} />\n      <Pagination prefix={`/difficulty/${difficulty}/`} {...pageContext} />\n    </>\n  )\n}\n\nexport default Difficulties\nexport const pageQuery = graphql`\n  query($difficulty: String, $skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    listing: allMarkdownRemark(\n      sort: { fields: [frontmatter___id], order: ASC }\n      filter: { frontmatter: { difficulty: { eq: $difficulty } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          fileAbsolutePath\n          frontmatter {\n            id\n            title\n            difficulty\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}