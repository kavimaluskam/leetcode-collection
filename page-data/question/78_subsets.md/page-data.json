{"componentChunkName":"component---src-templates-question-js","path":"/question/78_subsets.md","result":{"data":{"site":{"siteMetadata":{"title":"Leetcode Collection"}},"markdownRemark":{"html":"<h2>Problem</h2>\n<p>Given a set of <strong>distinct</strong> integers, <em>nums</em>, return all possible subsets (the power set).</p>\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\n<p><strong>Example:</strong></p>\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong>\n[\n  [3],\n&nbsp; [1],\n&nbsp; [2],\n&nbsp; [1,2,3],\n&nbsp; [1,3],\n&nbsp; [2,3],\n&nbsp; [1,2],\n&nbsp; []\n]</pre>\n<h2>Discussion</h2>\n<p>The problem requires all possible subsets given a distinct set of integers.\nWe know the size of the answer would be of size <code>2 ^ n</code> for subset problem.</p>\n<p>Further more, we can consider the subset solutions to be different combination\nof each element in the input set. Consider the example with input <code>[1, 2, 3]</code>:</p>\n<table>\n<thead>\n<tr>\n<th>Subset</th>\n<th>Integer Combination</th>\n<th>Binary Form</th>\n<th>Decimal Form</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>[]</code></td>\n<td><code>[None, None, None]</code></td>\n<td><code>000</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>[1]</code></td>\n<td><code>[None, None, 1]</code></td>\n<td><code>001</code></td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>[2]</code></td>\n<td><code>[None, 2, None]</code></td>\n<td><code>010</code></td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td><code>[1, 2]</code></td>\n<td><code>[None, 2, 1]</code></td>\n<td><code>011</code></td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>[3]</code></td>\n<td><code>[3, None, None]</code></td>\n<td><code>100</code></td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td><code>[1, 3]</code></td>\n<td><code>[3, None, 1]</code></td>\n<td><code>101</code></td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>[2, 3]</code></td>\n<td><code>[3, 2, None]</code></td>\n<td><code>110</code></td>\n<td><code>6</code></td>\n</tr>\n<tr>\n<td><code>[1, 2, 3]</code></td>\n<td><code>[3, 2, 1]</code></td>\n<td><code>111</code></td>\n<td><code>7</code></td>\n</tr>\n</tbody>\n</table>\n<p>We can see the result is a set of combination of <em>switching on/off</em> of each\nelement in the input list. And we can map the combination into binary string,\nthen decimal integers below <code>n</code>.</p>\n<p>Thus we can solve the problem by mapping all those integers into different\nsubsets.</p>\n<h3>Solution</h3>\n<p>Given input with size <code>n</code>, we have result with size <code>2 ^ n</code>.\nFor all integers in <code>[0, 2^n)</code>, we can change it to binary string format, and\nthus integer combination of set integers, and finally different subsets.</p>\n<p>The most difficult part is converting integer to binary string.\nSimply apply <code>bin(i)</code> will yield binary string <code>0b*****</code> from integer <code>i</code>.</p>\n<p>Yet to allow binary string carrying all <code>n</code> digits, we should add leading <code>0</code>s\nfor small integers. Achieving this we add <code>n</code> to every integer <code>i</code>, so every\nbinary string will be <code>0b1*****</code>. Omitting the first 3 characters and we can\nextract the binary form string.</p>\n<p>Thus viewing the binary form string as a list of index respect to the input\nlist, we can obtain the corresponding subset.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">subsets</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n        size <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> length\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            binary <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">|</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> binary<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> result</code></pre></div>\n<h3>Complexity Analysis</h3>\n<ul>\n<li>Time Complexity: <code>O(n * 2 ^ n)</code>, considering the solution set of size\n<code>2 ^ n</code>, with each subset have at most <code>n</code> elements</li>\n<li>Space Complexity: <code>O(n * 2 ^ n)</code>, considering the solution set of size\n<code>2 ^ n</code>, with each subset have at most <code>n</code> elements</li>\n</ul>","frontmatter":{"id":78,"title":"Subsets","url":"https://leetcode.com/problems/subsets/description/","tags":["array","backtracking","bit-manipulation"],"difficulty":"Medium","acceptance":"63.1%"}}},"pageContext":{"id":78}},"staticQueryHashes":["3111183354"]}