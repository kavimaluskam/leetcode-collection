{"componentChunkName":"component---src-templates-question-js","path":"/question/264_ugly-number-ii.md","result":{"data":{"site":{"siteMetadata":{"title":"Leetcode Collection"}},"markdownRemark":{"html":"<h2>Problem</h2>\n<p>Write a program to find the <code>n</code>-th ugly number.</p>\n<p>Ugly numbers are<strong> positive numbers</strong> whose prime factors only include <code>2, 3, 5</code>.&nbsp;</p>\n<p><strong>Example:</strong></p>\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 12\n<strong>Explanation: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.</pre>\n<p><strong>Note: </strong>&nbsp;</p>\n<ol>\n\t<li><code>1</code> is typically treated as an ugly number.</li>\n\t<li><code>n</code> <b>does not exceed 1690</b>.</li>\n</ol>\n<h2>Discussion</h2>\n<p>We use the 3-queues approach in hints. Solving this problem, there are two\npoints to be noted:</p>\n<ol>\n<li>an <em>ugly number</em> must be multiplied by either 2, 3, or 5 from a\nsmaller <em>ugly number</em></li>\n<li>the key is how to maintain the order of the <em>ugly numbers</em>.</li>\n</ol>\n<p>To include all <em>ugly numbers</em>, we can maintain 3 queues: <code>q_2</code>, <code>q_3</code>, <code>q_5</code>,\nsuch that for every <em>ugly numbers</em> <code>u</code>, we have:\n<code>2 * u in q_2</code>, <code>3 * u in q_3</code>, and <code>5 * u in q_5</code>.</p>\n<h3>Solution</h3>\n<p>Under the above setup we can confirm that every <em>ugly number</em> is included in\n<code>q_2 + q_3 + q_5</code>. Achieving this, imagine at <code>k</code> iteration, we have:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">u_k <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>q_2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> q_3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> q_5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> u_k <span class=\"token operator\">=</span> q_2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> q_2<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> u_k <span class=\"token operator\">=</span> q_3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> q_3<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> u_k <span class=\"token operator\">=</span> q_5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> q_5<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\nq_2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>u_k <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nq_3<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>u_k <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nq_5<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>u_k <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>For the initiation, we skip the first complex cases, and setup for <code>k = 2</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">u_1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\nq_2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nq_3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nq_5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Combine the first case and <code>k</code> iteration, we have the algorithm.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">nthUglyNumber</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        q2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        q3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n        q5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n        r <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n        i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n            r <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>q2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> q3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> q5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> q2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                q2<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> q3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                q3<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> q5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                q5<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n            q2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            q3<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n            q5<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">return</span> r</code></pre></div>\n<h3>Complexity Analysis</h3>\n<ul>\n<li>Time Complexity: <code>O(n)</code>, as we produce 1 <em>ugly number</em> in each iteration</li>\n<li>Space Complexity: <code>O(n)</code>, as we remove 1 element but push 3 element in each\niteration. So the space will be occupied by <code>2n</code>.</li>\n</ul>","frontmatter":{"id":264,"title":"Ugly Number II","url":"https://leetcode.com/problems/ugly-number-ii/description/","tags":["math","dynamic-programming","heap"],"difficulty":"Medium","acceptance":"42.3%"}}},"pageContext":{"id":264}},"staticQueryHashes":["72776548"]}